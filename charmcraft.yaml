# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: kiali-k8s
type: charm
title: Kiali
summary: A Juju charm to operate Kiali
description: |
  Kiali is a dashboard for Istio, providing visualization and control of your service mesh.

assumes:
  - k8s-api

bases:
  - build-on:
    - name: ubuntu
      channel: "22.04"
      architectures: ["amd64"]
    run-on:
    - name: ubuntu
      channel: "22.04"
      architectures: ["amd64"]
  - build-on:
    - name: ubuntu
      channel: "22.04"
      architectures: ["arm64"]
    run-on:
    - name: ubuntu
      channel: "22.04"
      architectures: ["arm64"]

charm-libs:
  - lib: "grafana_k8s.grafana_source"
    version: "0"

containers:
  kiali:
    resource: kiali-image

peers:
  # TODO: Can we remove this?  Required for the grafana_datasource lib, but not for features we use.
  grafana:
    interface: grafana_peers

requires:
  ingress:
    interface: ingress
    limit: 1
  istio-metadata:
    interface: istio_metadata
    limit: 1
  logging:
    interface: loki_push_api
    description: |
      Receives Loki's push api endpoint address to push logs to, and forwards charm's built-in alert rules to Loki.
  prometheus:
    interface: prometheus_api
    limit: 1
  require-cmr-mesh:
    interface: cross_model_mesh
  service-mesh:
    interface: service_mesh

provides:
  provide-cmr-mesh:
    interface: cross_model_mesh
  metrics-endpoint:
    interface: prometheus_scrape
    description: |
      Exposes the Prometheus metrics endpoint providing telemetry about the Kiali instance

config:
  options:
    view-only-mode:
      type: boolean
      default: true
      description: >
        Enables view-only mode, restricting Kiali to only read service mesh resources without exposing the ability to make any changes to cluster/mesh resources.
        By design, this defaults to true to encourage cluster admins and charm authors to make mesh modifications via Juju relations,
        thereby avoiding state mismatches between Juju and the mesh (since Juju does not track changes made in the Kiali dashboard).

parts:
  charm:
    plugin: charm
    # include rustc and cargo to compile pydantic
    build-packages: [git, rustc, cargo]
    charm-binary-python-packages:
    - "pydantic>=2"
    - "cryptography"
    - "jsonschema"

resources:
  kiali-image:
    type: oci-image
    description: Kiali OCI image
    upstream-source: quay.io/kiali/kiali:v2.2.0